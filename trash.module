<?php

/**
 * @file
 * Displays deleted entities and allows them to be restored.
 */

define('TRASH_REALM', 'trash');
define('TRASH_GRANT_ID_PUBLIC', 0);
define('TRASH_GRANT_ID_PRIVATE', 1);

/**
 * Implements hook_form_alter().
 */
function trash_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (strpos($form_id, 'delete') && method_exists($form_state->getFormObject(), 'getEntity')) {
    $entity = $form_state->getFormObject()->getEntity();
    $entity_type = $entity->getEntityType();
    if (\Drupal::service('multiversion.manager')->isSupportedEntityType($entity_type)) {
      $form['description'] = array(
        '#markup' => t('The @entity %label will be moved to the trash.', ['@entity' => $entity_type->get('label'), '%label' => $entity->label()]),
      );
    }
  }
}

/**
 * Implementation of hook_node_grants().
 */
function trash_node_grants(\Drupal\Core\Session\AccountInterface $account, $op) {
  if ($op == 'view') {
    if (array_key_exists($account::AUTHENTICATED_ROLE, $account->getRoles())) {
      $grants[TRASH_REALM] = array(
        TRASH_GRANT_ID_PUBLIC,
        TRASH_GRANT_ID_PRIVATE,
      );
    }
    else {
      $grants[TRASH_REALM] = array(
        TRASH_GRANT_ID_PUBLIC,
      );
    }

    return $grants;
  }
}

/**
 * Implements hook_node_access_records().
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 */
function trash_node_access_records(\Drupal\node\NodeInterface $node) {
  $private = FALSE;
  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $manager */
  $manager = \Drupal::service('entity_type.manager');
  /** @var \Drupal\multiversion\Entity\Storage\ContentEntityStorageInterface $node_storage */
  $node_storage = $manager->getStorage('node');
  $deleted_nodes = $node_storage->loadMultipleDeleted();
  if (!empty($deleted_nodes)) {
    $deleted_ids = array_keys($deleted_nodes);
    $private = (in_array($node->id(), $deleted_ids)) ? TRUE : FALSE;
  }

  if ($private) {
    $grants[] = array(
      'realm' => TRASH_REALM,
      'gid' => TRASH_GRANT_ID_PRIVATE,
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
  }
  else {
    $grants[] = array(
      'realm' => TRASH_REALM,
      'gid' => TRASH_GRANT_ID_PUBLIC,
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
  }

  return $grants;
}
